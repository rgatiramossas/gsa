Crie um app em React Native com foco em mobile, utilizando TypeScript, com uma interface responsiva e moderna, estruturado com navega√ß√£o via menu inferior fixo. Este app ser√° utilizado em 99% dos casos por dispositivos m√≥veis, portanto a interface precisa se comportar como um app nativo (estilo PWA/mobile app).

üîê Perfis de Usu√°rios
O app deve ter sistema de autentica√ß√£o com 3 tipos de usu√°rios:

Administrador (acesso total)

T√©cnico (visualiza e cadastra OS que ele mesmo realizou)

Gestor (visualiza OS e or√ßamentos de sua equipe)

üß≠ Navega√ß√£o principal (via menu fixo inferior):
Painel

Clientes

Servi√ßos

Or√ßamentos (esta p√°gina ainda n√£o ser√° criada, apenas reserve o bot√£o)

üìä P√°gina: Painel (Dashboard)
A p√°gina inicial (Painel) deve exibir cards com gr√°ficos de desempenho da equipe. Os dados podem ser mockados, por enquanto. Use bibliotecas como react-native-chart-kit ou victory-native para visualiza√ß√£o dos gr√°ficos.

üë• P√°gina: Clientes
Exibir:

Lista de clientes (Nome + Local)

Bot√£o para adicionar novo cliente

Cada item leva a uma p√°gina de detalhes do cliente, contendo:

Nome, Local

Hist√≥rico de Ordens de Servi√ßo (OS)

Hist√≥rico de Or√ßamentos (placeholder)

Bot√µes: Editar cliente, Excluir cliente

Formul√°rio de novo cliente:

Nome (obrigat√≥rio)

Local (obrigat√≥rio)

üõ†Ô∏è P√°gina: Servi√ßos (Ordens de Servi√ßo - OS)
Exibir:

Lista de OS com informa√ß√µes principais

Bot√£o para criar nova OS

Formul√°rio para nova OS:

Cliente (dropdown que puxa os clientes do banco de dados ‚Äì obrigat√≥rio)

Ve√≠culo (campo manual ‚Äì obrigat√≥rio)

Placa (campo manual)

Chassis (campo manual)

Regras: se Placa for preenchido, Chassis se torna opcional, e vice-versa

Data (preenchimento autom√°tico com a data atual, mas pode ser alterado)

T√©cnico respons√°vel (nome do usu√°rio logado ‚Äì n√£o edit√°vel, exceto se for administrador)

Tipo de servi√ßo (obrigat√≥rio ‚Äì op√ß√µes: Amassado de Rua, Granizo, Outros)

Valor do servi√ßo (em euros ‚Äì obrigat√≥rio)

Valor administrativo (somente vis√≠vel e edit√°vel pelo Administrador)

Upload de at√© 6 imagens (via galeria ou c√¢mera)

P√°gina de detalhes da OS:

Exibir todos os campos preenchidos

Bot√µes para Editar OS ou Excluir OS (somente quem criou ou um Administrador pode editar/excluir)

üîó Backend e Banco de Dados
O app deve se conectar a um banco de dados MySQL externo

Use uma API backend (Node.js + Express ou Laravel de prefer√™ncia) para gerenciar as requisi√ß√µes

Autentica√ß√£o pode ser via JWT

Os dados devem ser sincronizados com o banco remoto com foco em efici√™ncia e seguran√ßa

üß± Extras
Use React Navigation para gerenciamento de rotas

Use AsyncStorage para guardar sess√£o/token

Utilize Context API ou Redux para gerenciamento de estados globais (usu√°rio, permiss√µes, etc.)

Estilize usando Tailwind para React Native (opcional) ou styled-components